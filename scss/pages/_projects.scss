@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use '../abstracts/functions' as *;

.projects {
  height: $projects-height;
  position: $projects-position;
  display: flex;
  flex-direction: column;
  align-items: center;
  //2k
  @include breakpoint('2kscreen') {
    padding: 0 9% 2rem;
  }
  //large
  @include breakpoint('large') {
    height: rem(1100);
  }
  //extraSmall
  @include breakpoint('extraSmall') {
    height: rem(800);
  }

  & h3 {
    margin-bottom: 10vh;

    @include breakpoint('large') {
      margin-bottom: 3vh;
    }
    //extraSmall
    @include breakpoint('extraSmall') {
      margin-bottom: 7vh;
    }
  }

  &__container {
    display: $container-display;
    gap: $container-gap;
    width: $container-width;
    grid-template-columns: repeat(auto-fit, minmax($container-imgwidth, 1fr));

    //2k
    @include breakpoint('2kscreen') {
      grid-template-columns: repeat(auto-fit, minmax(rem(700), 1fr));
    }
    //fhd
    @include breakpoint('fhdscreen') {
      grid-template-columns: repeat(auto-fit, minmax(rem(500), 1fr));
    }

    //xextraLarge
    @include breakpoint('xextraLarge') {
      grid-template-columns: repeat(auto-fit, minmax(rem(400), 1fr));
    }
    //extraLarge
    @include breakpoint('extraLarge') {
      grid-template-columns: repeat(auto-fit, minmax(rem(400), 1fr));
    }
    //large
    @include breakpoint('large') {
    }
    //medium
    @include breakpoint('medium') {
      grid-template-columns: repeat(auto-fit, minmax(rem(300), 1fr));
    }
    //small
    @include breakpoint('small') {
    }
    //extraSmall
    @include breakpoint('extraSmall') {
      grid-template-columns: repeat(auto-fit, minmax(rem(170), 1fr));
      width: 100%;
    }
  }
}

.projects::before {
  position: $before-position;
  left: $before-left;
  top: $before-top;
  background-image: url($projects-background);
  background-size: $before-bg-size;
  width: $before-width;
  height: $before-width;
  content: $before-content;
  z-index: $before-z-index;
}
